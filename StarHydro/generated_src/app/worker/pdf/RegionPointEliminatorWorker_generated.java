/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package app.worker.pdf;

public abstract class RegionPointEliminatorWorker_generated extends java.lang.Object implements star.event.EventController, star.event.Listener, star.hydrology.events.LayerChangedRaiser
{
	private star.event.Adapter adapter;
	private static final long serialVersionUID = 1L;

	public  RegionPointEliminatorWorker_generated()
	{
		super();
	}
	 
	public void addNotify()
	{
		getAdapter().addHandled(star.hydrology.events.LayerChangedEvent.class );
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedEventHandle(event);
	}
	 
	private void eventRaisedEventHandle(star.event.Event event)
	{
		if( event.getClass().getName().equals( "star.hydrology.events.LayerChangedEvent" ) ) { 
			star.hydrology.events.LayerChangedRaiser r = (star.hydrology.events.LayerChangedRaiser)event.getSource();
			if(event.isValid())
			{
				handleEvent( r );
			}
			else
			{
				handleInvalidEvent( r );
			}
		}
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	abstract void handleEvent(star.hydrology.events.LayerChangedRaiser raiser);
	 
	void handleInvalidEvent(star.hydrology.events.LayerChangedRaiser raiser)
	{
	}
	 
	public void raise_LayerChangedEvent()
	{
		(new star.hydrology.events.LayerChangedEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		getAdapter().removeHandled(star.hydrology.events.LayerChangedEvent.class );
	}
	 
}