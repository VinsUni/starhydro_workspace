/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package app.worker;

public abstract class MainstreamLengthWorker_generated extends java.lang.Object implements star.event.EventController, star.event.Listener, star.hydrology.events.MainStreamLengthRaiser
{
	private star.event.Adapter adapter;
	private float length = Float.NaN;
	private app.worker.streamnetwork.Stream rootStream;
	private static final long serialVersionUID = 1L;

	public  MainstreamLengthWorker_generated()
	{
		super();
	}
	 
	public void addNotify()
	{
		getAdapter().addHandled(star.hydrology.events.StreamRootChangeEvent.class);
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedHandles(event);
	}
	 
	private void eventRaisedHandles(final star.event.Event event)
	{
		if( event.getClass().getName().equals( "star.hydrology.events.StreamRootChangeEvent" ) && event.isValid() ) 
		{
			(new star.hydrology.events.MainStreamLengthEvent(this,false)).raise();
		 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			setStreamRoot( (star.hydrology.events.StreamRootChangeRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".setStreamRoot "  + ( end-start )/1000000 ); } }},this,2);
		}
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	public float getLength()
	{
		return this.length ;
	}
	 
	protected app.worker.streamnetwork.Stream getRootStream()
	{
		return this.rootStream ;
	}
	 
	public void raise_MainStreamLengthEvent()
	{
		(new star.hydrology.events.MainStreamLengthEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		getAdapter().removeHandled(star.hydrology.events.StreamRootChangeEvent.class);
	}
	 
	protected void setLength(float length)
	{
		this.length = length ;
	}
	 
	protected void setRootStream(app.worker.streamnetwork.Stream rootStream)
	{
		this.rootStream = rootStream ;
	}
	 
	abstract void setStreamRoot(star.hydrology.events.StreamRootChangeRaiser r);
	 
}